/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

//Layer definitions
#define QWERTY 0
#define COLEMAK 1
#define RAISE 2
#define LOWER 3
#define AOE 4
#define AOERAISE 5
#define MINE 6
#define MINERAISE 7
#define ADJUST 8


/ {
    behaviors {
        mt_s: ctrl_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_CTRL_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        mt_l: alt_gui {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_ALT_GUI";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		qwerty {
// ---------------------------------------------------------------------------------------------------------------------------------
// |       |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |      |
// |       |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
// |       |  Z  |  X  |  C   |  V   |  B   |         |         |  |         |         |  N   |  M    |  ,    |  .   |   /   | CAPS |
//                     |      | TAB  |LWRESC|  SPACE  |         |  |         |SHFT/BKSP|RSEDEL| ENTER |       |
			bindings = <
	&none   &kp Q           &mt_l LC(W) W   &kp E           &mt_l LC(R) R   &mt_l LC(T) T                   /**/                    &kp Y   &kp U           &kp I           &kp O        &kp P       		&none
	&none   &mt_l LGUI A    &mt_l LALT S    &mt_s LSHFT D   &mt_s LCTRL F   &kp G                           /**/                    &kp H   &mt_s LCTRL J   &mt_s LSHFT K   &mt_l LALT L &mt_l LGUI SEMI   	&kp SQT
	&none   &mt_l LC(Z) Z   &mt_l LC(X) X   &mt_l LC(C) C   &mt_l LC(V) V   &mt_l LC(B) B &none     &none   /**/    &none   &none   &kp N   &kp M           &kp COMMA       &kp DOT      &kp FSLH       	&kp CAPS
	                                        &none           &kp TAB         &lt LOWER ESC &kp SPACE &none   /**/    &none   &mt LSHFT BSPC  &lt RAISE DEL   &kp ENTER       &none
			>;

			sensor-bindings = <&inc_dec_kp LC(PG_DN) LC(PG_UP) &inc_dec_kp LC(Z) LC(Y)>;
		};
		colemak {
// ---------------------------------------------------------------------------------------------------------------------------------
// |       |  Q  |  W  |  F   |  P   |  G   |                                          |  J   |  L    |  U    |  Y   |   ;   |      |
// |       |  A  |  R  |  S   |  T   |  D   |                                          |  H   |  N    |  E    |  I   |   O   |   '  |
// |       |  Z  |  X  |  C   |  V   |  B   |         |         |  |         |         |  K   |  M    |  ,    |  .   |   /   | CAPS |
//                     |      | TAB  |LWRESC|  SPACE  |         |  |         |SHFT/BKSP|RSEDEL| ENTER |       |
			bindings = <
	&none   &kp Q           &mt_l LC(W) W   &kp F           &kp P   		&kp G                   		/**/                    &kp J   &kp L           &kp U           &kp Y        &kp SEMI       &none
	&none   &mt_l LGUI A    &mt_l LALT R    &mt_s LSHFT S   &mt_s LCTRL T   &kp D                           /**/                    &kp H   &mt_s LCTRL N   &mt_s LSHFT E   &mt_l LALT I &mt_l LGUI O   &kp SQT
	&none   &mt_l LC(Z) Z   &mt_l LC(X) X   &mt_l LC(C) C   &mt_l LC(V) V   &mt_l LC(B) B &none     &none   /**/    &none   &none   &kp K   &kp M           &kp COMMA       &kp DOT      &kp FSLH       &kp CAPS
	                                        &none           &kp TAB         &lt LOWER ESC &kp SPACE &none   /**/    &none   &mt LSHFT BSPC  &lt RAISE DEL   &kp ENTER       &none
			>;

			sensor-bindings = <&inc_dec_kp LC(PG_DN) LC(PG_UP) &inc_dec_kp LC(Z) LC(Y)>;
		};
	};
};
